#!/bin/bash

case "$1" in
  start) ;;
  stop) exit 0 ;;
  restart) exit 0 ;;
  force-reload) exit 0 ;;
esac

################################################################
# autodetection
# orignally (w) by Basilio Kublik & others
# Some of this code was shamelessly stolen from the lucent 
# driver's scanPCI script
################################################################
# returns: target: pct789, cm8738, i8xx, sis, via686a, error
################################################################
function autodetection
{
   echo -n "detecting your modem..."
   target=error
   LSPCI_PATH="/bin /usr/bin /sbin /usr/sbin"
   for i in ${LSPCI_PATH}
   do
      if [ -x ${i}/lspci ]
      then
         LSPCI=${i}/lspci
      fi
   done
   if [ ! -x "${LSPCI}" ]
   then
      echo '** error'
      echo "lspci not found in ${LSPCI_PATH}"
      return
   fi
      
# The following modems are autodetected (note that detecting an AC'97
# controller is no guarentee that the codec behind it is supported):
#
#   134d:7890-7  PCtel HSP MicroModem 56
#   13f6:0211    C-Media CM8738
#   8086:2416    Intel 82801AA (ICHAA) AC'97 Modem Controller
#   8086:2446    Intel 82801BA/BAM (ICH2) AC'97 Modem Controller
#   8086:2486    Intel 82801CA/CAM (ICH3) AC'97 Modem Controller
#   8086:24c6    Intel 82801DB/DBM (ICH4) AC'97 Modem Controller
#   8086:7196    Intel 82440MX (Banister) AC'97 Modem Controller
#   1039:7013    SiS AC'97 Modem Controller
#   1106:3068    VIA 686A AC'97 Modem Controller
#

   DEVICES="0x134d:0x7890-0x7897"
   DEVICES="${DEVICES} 0x13f6:0x0211"
   DEVICES="${DEVICES} 0x8086:0x2416"
   DEVICES="${DEVICES} 0x8086:0x2446"
   DEVICES="${DEVICES} 0x8086:0x2486"
   DEVICES="${DEVICES} 0x8086:0x24c6"
   DEVICES="${DEVICES} 0x8086:0x7196"
   DEVICES="${DEVICES} 0x1039:0x7013"
   DEVICES="${DEVICES} 0x1106:0x3068"

   found="no"
   
   # Test the lspci output to see if the 2nd column is "Class"
   # If yes, the pci id if field 4, else it is field 3
   
   class=`${LSPCI} -n | head -1 | cut -d' ' -f2`
   if [ ${class} = "Class" ] ; then
      fid=4
   else
      fid=3
   fi

   for PCIDEV in `${LSPCI} -n | cut -d' ' -f${fid}`
   do
      DEVVEN=$(( 0x`echo ${PCIDEV} | cut -d':' -f1` + 0 ))
      DEVNUM=$(( 0x`echo ${PCIDEV} | cut -d':' -f2` + 0 ))
      for DEV in ${DEVICES}
      do
         VENDOR=$(( `echo ${DEV} | cut -d':' -f1` + 0 ))
         DEVMIN=$(( `echo ${DEV} | cut -d':' -f2 | cut -d'-' -f1` + 0 ))
         DEVMAX=$(( `echo ${DEV} | cut -d':' -f2 | cut -d'-' -f2` + 0 ))

         if [ ${DEVVEN} -eq ${VENDOR} -a ${DEVNUM} -ge ${DEVMIN} -a ${DEVNUM} -le ${DEVMAX} ]
         then
            found="yes"
            MODEM_VENDOR=0x`echo ${PCIDEV} | cut -d':' -f1`
         fi
      done

      if test ${found} = "yes"; then
         eval test \"\$modem_${MODEM_VENDOR}\" = yes && continue
         eval modem_${MODEM_VENDOR}=yes      
         for i in $MODEM_VENDOR
         do
            case "${i}" in
            "0x134d")
              target=pct789
              ;;
            "0x13f6")
               target=cm8738
               ;; 
            esac
         done
      fi
   done
}


kernel_version="$(uname -r)"
source_dir="/usr/src"
# FIXME: handle multiple pctel source tarballs
sources="$source_dir/pctel-*.tar.gz"
source_version="$(echo $sources | sed -e 's,.*pctel-,,g' -e 's,.tar.gz,,g')"
pctel_version="$(dpkg -l pctel-$kernel_version | awk '/^ii/{print $3}')"

if [ "$source_version" = "$pctel_version" ]; then
    if [ -f "/lib/modules/$kernel_version/extra/pctel.ko" ]; then
        pctel_configured=true
    fi
fi

echo -n "checking PCTel modems..."

if [ "true" = "$pctel_configured" ]; then
    echo -n "    all good"
else
    autodetection
    if [ ${target} = "error" ]; then
        echo -n "       no PCTel modems found"
    else
        echo -n "    broken!!!  recompiling from scratch..."
        if [ -f ${sources} ]; then
            cd $source_dir
            ./pctel_tgz2deb $sources
            dpkg -i "$source_dir/pctel-${kernel_version}_$source_version.deb"
            echo -n "  done"
        else
            echo -n "  failed!!!  missing source"
        fi
    fi
fi
echo "."
